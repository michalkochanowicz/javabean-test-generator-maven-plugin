package pl.waw.michal.maven.plugin.javabeantestgenerator;

import pl.waw.michal.maven.plugin.javabeantestgenerator.generator.TestGenerator;

import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.util.ArrayList;
import java.util.Collection;
import java.util.regex.Pattern;

/**
 * This class makes decision if given class should be tested. Decision is based on configuration given in
 * {@link Config} and other rules:
 * <ul>
 *         <li>Abstract classes are rejected.</li>
 *         <li>Non-public classes are rejected.</li>
 *         <li>Classes which have "Test" suffix are rejected.</li>
 *         <li>Classes which for which there is a class with "Test" suffix are rejected.</li>
 * </ul>
 */
public class ClassQualifier {

	private Collection<Pattern> classMasksToSkipRegexp;

	public ClassQualifier(Config config) {
		classMasksToSkipRegexp = new ArrayList<>(config.getClassMasksToSkip().size());

		for(String classMAskToSkip : config.getClassMasksToSkip()) {
			classMasksToSkipRegexp.add(Pattern.compile(classMAskToSkip.replaceAll("\\*", ".*")));
		}
	}

	public boolean shouldProcessThisClass(Class classToProcess) throws IllegalAccessException {
		if(classToProcess.getCanonicalName().endsWith("Test")) {
			return false;
		}

		if(!Modifier.isPublic(classToProcess.getModifiers()) || Modifier.isAbstract(classToProcess.getModifiers())) {
			return false;
		}

		try {
			classToProcess.getConstructor();
		} catch(NoSuchMethodException e) {
			return false;
		}

		try {
			// If there is a class with "Test" suffix and it is not marked as generated by this plugin,
			// we skip it as it has a test written manually or generated by other means.
			Class<?> testClass = classToProcess.getClassLoader().loadClass(classToProcess.getCanonicalName() + "Test");
			Field generatedByField = testClass.getField(TestGenerator.MARKER_FIELD_NAME);

			if(generatedByField.get(null) == null || !TestGenerator.MARKER_FIELD_VALUE.equals(generatedByField.get(null))) {
				return false;
			}
		} catch(ClassNotFoundException e) {
			// This is what we want - there is no test for this class.
			// This test should not be necessary  because there should be no test in source directory -
			// tests should be in test sources directory.
		} catch(NoSuchFieldException e) {
			// If there is a Test class and it doesn't have a marker field indicating it is generated by
			// this plugin, we consifer it tested manually and don't generate test.
			return false;
		}

		for(Pattern pattern : classMasksToSkipRegexp) {
			if(pattern.matcher(classToProcess.getName()).matches()) {
				return false;
			}
		}

		return true;
	}

}